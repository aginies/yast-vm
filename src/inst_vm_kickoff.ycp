/**
 * Module:	inst_vm_kickoff.ycp
 *
 * Authors:	Ladislav Slezak <lslezak@suse.cz>
 *
 * Purpose:	Prepare and start installation in a virtual machine.
 *
 * $Id:$
 */
{
    import "VM";
    import "Directory";
    import "Progress";
    import "Report";
    import "Package";
    import "Service";


    textdomain "vm";


    list <string> progress_stages = [
				     // progress stage
				     _("Install packages"),
				     // progress stage
				     _("Prepare virtual machine environment"),
				     // progress stage
				     _("Write virtual machine configuration"),
				     // progress stage
				     _("Start installation"),
				     // progress stage
				     _("Finish installation"),
    ];

    // progress stage
    string update_stage = _("Update the configuration");

    list progress_descriptions = [];

    integer progress_length = size(progress_stages);

    // Headline for virtual machine installation
    string headline = _("Preparing Installation of the Virtual Machine");

    // help text
    string help_text = _("<P><B>Installation</B></P><P>Preparing the virtual machine for installation...</P>");

    string error = _("An error occured during installation of the virtual machine.");

    // enable progress
    Progress::on();

    // Headline for virtual machine installation
    Progress::New (headline, "", progress_length,
		   progress_stages, progress_descriptions, help_text);

    Progress::NextStage ();

    boolean success = VM::InstallPackages();

    // part of an error message
    string abortmsg = _("The installation will be aborted.");

    if (!success)
    {
	Report::Error(_("Cannot install required packages.") + "\n" + abortmsg);
	return `abort;
    }

    Progress::NextStage ();

    success = VM::Prepare();

    if (!success)
    {
	Report::Error(_("Cannot prepare virtual machine environment.") + "\n" + abortmsg);
	return `abort;
    }

    Progress::NextStage ();

    success = VM::Write();
    if (!success)
    {
	Report::Error(_("Cannot write configuration of the virtual machine.") + "\n" + abortmsg);
	return `abort;
    }

    Progress::NextStage ();

    success = VM::Start();
    if (!success)
    {
	Report::Error(_("Cannot start the virtual machine.") + "\n" + abortmsg);
	return `abort;
    }

    Progress::NextStage ();

    VM::Prepare2();
    if (!success)
    {
	Report::Error(_("Cannot prepare the virtual machine for reboot.") + "\n" + abortmsg);
	return `abort;
    }
    success = VM::Start();
    if (!success)
    {
	return `abort;
    }

    VM::Prepare3();
    if (!success)
    {
	Report::Error(_("Cannot update configuration of the virtual machine."));
	return `abort;
    }
    Progress::Finish ();

    return `next;
}
